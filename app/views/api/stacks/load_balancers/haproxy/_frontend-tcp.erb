<% load_balancer.container_services.each do |service| %>
  <% next if service.containers.empty? %>
  <% service.ingress_rules.tcp.tcp_lb_rules.nat.lb.each do |ingress| %>
frontend TCP_<%= ingress.port_nat %>
  bind :<%= ingress.port_nat %>
  mode tcp
  log global
  option tcplog
  timeout connect 5s
  timeout client 5m
  timeout server 5m
  <% if ingress.restrict_cf && !load_balancer.cloudflare_ipaddrs.empty? %>
  acl cloudflare_only src <%= load_balancer.cloudflare_ipaddrs.map { |i| "#{i.to_s}/#{i.prefix}" }.join(' ') %>
  http-request deny if !cloudflare_only
  <% end %>
  default_backend <%= Digest::MD5.hexdigest("#{service.name}#{ingress.id}") %>
  <% end %>
<% end %>
<% load_balancer.container_services.each do |service| %>
  <% next if service.containers.empty? %>
  <% service.ingress_rules.tls.nat.lb.each do |ingress| %>
<% if load_balancer.has_shared_cert? %>
frontend TLS_<%= ingress.port_nat %>
  bind :<%= ingress.port_nat %> ssl crt /etc/haproxy/shared_cert.pem
  mode tcp
  timeout connect 5s
  timeout client 5m
  timeout server 5m
  <% if ingress.restrict_cf && !load_balancer.cloudflare_ipaddrs.empty? %>
  acl cloudflare_only src <%= load_balancer.cloudflare_ipaddrs.map { |i| "#{i.to_s}/#{i.prefix}" }.join(' ') %>
  http-request deny if !cloudflare_only
  <% end %>
  default_backend <%= Digest::MD5.hexdigest("#{service.name}#{ingress.id}") %>
  <% end %>
<% end %>
<% end%>
