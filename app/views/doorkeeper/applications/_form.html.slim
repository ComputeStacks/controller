= form_for application, url: doorkeeper_submit_path(application), html: { role: 'form' } do |f|
  .panel.panel-default
    .panel-body
      - if application.errors.any?
        .alert.alert-danger[data-alert]
          p
            = t('doorkeeper.applications.form.error')
      .form-group.row
        = f.label :name, class: 'col-sm-2 col-form-label font-weight-bold'
        .col-sm-10
          = f.text_field :name, class: "form-control #{ 'is-invalid' if application.errors[:name].present? }", required: true
          = doorkeeper_errors_for application, :name
      .form-group.row
        = f.label :redirect_uri, class: 'col-sm-2 col-form-label font-weight-bold'
        .col-sm-10
          = f.text_area :redirect_uri, class: "form-control #{ 'is-invalid' if application.errors[:redirect_uri].present? }"
          = doorkeeper_errors_for application, :redirect_uri
          span.form-text.text-secondary
            = t('doorkeeper.applications.help.redirect_uri')
          - if Doorkeeper.configuration.native_redirect_uri
            span.form-text.text-secondary
              = raw t('doorkeeper.applications.help.native_redirect_uri', native_redirect_uri: content_tag(:code, class: 'bg-light') { Doorkeeper.configuration.native_redirect_uri })
          - if Doorkeeper.configuration.allow_blank_redirect_uri?(application)
            span.form-text.text-secondary
              = t('doorkeeper.applications.help.blank_redirect_uri')
      .form-group.row
        = f.label :confidential, class: 'col-sm-2 form-check-label font-weight-bold'
        .col-sm-10
          = f.check_box :confidential, class: "checkbox #{ 'is-invalid' if application.errors[:confidential].present? }"
          = doorkeeper_errors_for application, :confidential
          span.form-text.text-secondary
            = t('doorkeeper.applications.help.confidential')
      .form-group.row
        = f.label :scopes, class: 'col-sm-2 col-form-label font-weight-bold'
        .col-sm-10
          = f.select(:scopes, options_for_select(oauth_available_scopes, selected: @application.scopes), { include_blank: true }, { multiple: "multiple", class: "form-control chosen-select-standard #{ 'has-error' if application.errors[:scopes].present? }" })
          = doorkeeper_errors_for application, :scopes
          br
          span.form-text.text-secondary
            = t('doorkeeper.applications.help.scopes')
      - if current_user.is_admin
        .form-group.row
          = f.label :owner_id, class: 'col-sm-2 col-form-label font-weight-bold'
          .col-sm-10
            = f.collection_select(:owner_id, User.select(:id, :fname, :lname).sorted, :id, :full_name, { include_blank: true }, {class: "form-control chosen-select-standard #{ 'has-error' if application.errors[:owner_id].present? }"})
            = doorkeeper_errors_for application, :owner_id
    .panel-footer
      = link_to t('doorkeeper.applications.buttons.cancel'), oauth_applications_path, class: 'btn btn-default'
      = f.submit t('doorkeeper.applications.buttons.submit'), class: 'btn btn-primary pull-right'
