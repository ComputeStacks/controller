name: "create release"

on:
  workflow_dispatch:
    inputs:
      majorTag:
        description: 'Major Tag (e.g. v7.0)'
        required: true
      minorTag:
        description: 'Minor Tag (e.g. v7.0.1)'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: cstacks
          POSTGRES_DB: cstacks
          POSTGRES_PASSWORD: cstacks
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push controller
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: linux/amd64
          push: true
          network: host
          build-args: |
            github_user=${{ secrets.GEM_PULL_USER }}
            github_token=${{ secrets.GEM_PULL_TOKEN }}
          tags: |
            ${{ env.REGISTRY }}/computestacks/controller:${{ github.event.inputs.majorTag }}
            ${{ env.REGISTRY }}/computestacks/controller:${{ github.event.inputs.minorTag }}
            ${{ env.REGISTRY }}/computestacks/controller:latest
